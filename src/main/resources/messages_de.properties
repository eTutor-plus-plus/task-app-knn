correct=Ihre Lösung ist richtig.
incorrect=Ihre Lösung ist falsch.
input=Ihre Eingabe: {0}
criterium.syntax=Syntax
criterium.syntax.valid=Gültige Syntax
criterium.value=Wert
criterium.point=Punkt {0}
defaultTaskGroupDescription=
defaultTaskDescription=Klassifizieren Sie die angegebenen Punkte, indem Sie die entsprechenden Labels kommasepariert eingeben (z.B. A, B, B).
knn.for.point=Klassifizierung für Punkt {0}
knn.point=Punkt:
knn.classified.as=Klassifiziert als:
knn.k.neighbors=k-Nächste Nachbarn:
knn.index=Index
knn.class=Klasse
knn.distance=Distanz
knn.votes.per.class=Stimmen je Klasse:
knn.tie.break.reason=Entscheidungsgrund:
knn.majority=Kein Tiebreaker nötig - klare Mehrheit
knn.sumDistance=Aufgelöst durch minimale Gesamtdistanz
knn.meanDistance=Gleichstand durch minimalen durchschnittlichen Abstand entschieden
knn.nearestNeighbor=Gleichstand durch nÃ¤chstgelegenen Nachbarn entschieden
knn.alphabetical=Aufgelöst durch alphabetische Reihenfolge

#Sumission Knn
submission.length.mismatch=Eingabe länge stimmt nicht mit der Lösungsmenge Überein({0} erwartet, {1} gegeben).
submission.solution.visualisation=Lösungs Visualisierung:
submission.invalid.chars=Die Eingabe enthält Zeichen, die keine Buchstaben oder Beistriche sind.
submission.invalid.labels=Unbekannte Klasse(n): {0}

#Description Knn
task.knn.description=Ordnen Sie die folgenden {0} Testpunkte (grüne Diamanten) anhand des KNN-Klassifikators (k={1}, Distanz-Metrik: {2}) der passenden Klasse zu. <br>\
Der Merkmalsbereich ist:<ul><li>{3}={4}-{5}</li><li>{6}={7}-{8}</li></ul>\
Falls mehrere Trainingspunkte denselben Abstand wie die k nächsten Nachbarn haben, werden alle diese Punkte als Nachbarn berücksichtigt (es kann also mehr als k Nachbarn geben) <br>
task.knn.metric.formula.manhattan=Die Manhattan-Distanz kann wie folgt berechnet: d(x, y) = |x₁ - y₁| + |x₂ - y₂| <br>
task.knn.metric.formula.euclidean=Die Euklidische Distanz kann wie folgt berechnet werden: d(x, y) = √((x₁ - y₁)² + (x₂ - y₂)²) <br>
task.knn.metric.formula.minkowski=Die Minkowski-Distanz mit p=3 kann wie folgt berechnet werden: d(x, y) = (|x₁ - y₁|³ + |x₂ - y₂|³)^(1/3) <br>
task.knn.tiebreaker.sum.description=Bei Gleichstand entscheidet zuerst die kleinste Summe der Distanzen pro Klasse, danach die alphabetische Reihenfolge des Klassennamens (Tie-Break-Verfahren: {0}).
task.knn.tiebreaker.mean.description=Bei Gleichstand entscheidet zuerst der kleinste Durchschnitt der Distanzen pro Klasse, danach die alphabetische Reihenfolge des Klassennamens (Tie-Break-Verfahren: {0}).
task.knn.tiebreaker.nearest.description=Bei Gleichstand entscheidet der Nachbar mit der geringsten Distanz, danach die alphabetische Reihenfolge des Klassennamens (Tie-Break-Verfahren: {0}).
task.knn.visualisation=Aufgaben Visualisierung:
task.knn.testpoints.table.title=Zu klassifizierende Punkte
task.knn.testpoints.table.points=Punkt {0}
task.knn.submission.hint=Pro richtig zugeordnetem Punkt erhalten Sie {0} Punkte, pro falsch zugeordnetem Punkt werden {1} Punkte abgezogen.<br>\
Geben Sie die Klassen in derselben Reihenfolge an wie die Testpunkte (erster Eintrag → Punkt 1, zweiter Eintrag → Punkt 2 usw.).<br>\
Wenn Sie einen Punkt nicht klassifizieren möchten, lassen Sie die entsprechende Stelle wie im nachfolgenden Beispiel (3 zu klassifizierende Punkte) mit Enthaltung gezeigt, leer.<br>\
<b>Abgabeformat:</b><br>\
A, B, A <br>\
Beispiel mit Enthaltung:<br>\
 , B, A <br>
